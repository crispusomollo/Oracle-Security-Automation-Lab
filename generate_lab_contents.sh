#!/bin/bash
# ==============================================
# Oracle Security Automation Lab Populator
# Author: Chris Origi
# ==============================================

echo "[INFO] Populating Oracle Security Automation Lab structure..."
BASE_DIR=$(pwd)

# ---------------------------
# Create project directories
# ---------------------------
mkdir -p setup automation/logs modules/01_users_roles_privileges data/generated docs/screenshots

# ---------------------------
# Setup scripts
# ---------------------------
cat <<'EOF' > setup/setup_environment.sh
#!/bin/bash
# setup_environment.sh - Configure Oracle environment variables
echo "[INFO] Configuring Oracle Environment..."
export ORACLE_SID=FREE
export ORACLE_HOME=/opt/oracle/product/23ai/dbhomeFree
export PATH=$ORACLE_HOME/bin:$PATH
echo "[INFO] Oracle environment configured successfully."
EOF
chmod +x setup/setup_environment.sh

cat <<'EOF' > setup/create_lab_user.sql
ALTER SESSION SET CONTAINER = FREEPDB1;

CREATE USER lab_admin IDENTIFIED BY lab123
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON users;

GRANT CONNECT, RESOURCE, CREATE SESSION, CREATE TABLE TO lab_admin;
ALTER USER lab_admin ACCOUNT UNLOCK;

CONNECT lab_admin/lab123;
CREATE TABLE departments (
  dept_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  dept_name VARCHAR2(50)
);

CREATE TABLE employees (
  emp_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  emp_name VARCHAR2(100),
  job_title VARCHAR2(100),
  salary NUMBER,
  dept_id NUMBER REFERENCES departments(dept_id)
);

INSERT INTO departments (dept_name) VALUES ('IT');
INSERT INTO departments (dept_name) VALUES ('Finance');
INSERT INTO departments (dept_name) VALUES ('Security');
COMMIT;
EOF

cat <<'EOF' > setup/load_dummy_data.sql
CONNECT lab_admin/lab123;
BEGIN
  FOR i IN 1..10 LOOP
    INSERT INTO employees (emp_name, job_title, salary, dept_id)
    VALUES (
      'Employee_' || i,
      CASE WHEN MOD(i,3)=0 THEN 'DBA' WHEN MOD(i,3)=1 THEN 'Developer' ELSE 'Analyst' END,
      3000 + (i*500),
      MOD(i,3)+1
    );
  END LOOP;
  COMMIT;
END;
/
EOF

cat <<'EOF' > setup/init_lab.sh
#!/bin/bash
# init_lab.sh - Initialize Oracle Security Lab
set -e
LOG_FILE="../automation/logs/setup.log"
echo "[INFO] Starting lab setup..." | tee $LOG_FILE
source ./setup_environment.sh
sqlplus / as sysdba @create_lab_user.sql | tee -a $LOG_FILE
sqlplus lab_admin/lab123 @load_dummy_data.sql | tee -a $LOG_FILE
echo "[INFO] Lab setup completed successfully!" | tee -a $LOG_FILE
EOF
chmod +x setup/init_lab.sh

cat <<'EOF' > setup/verify_lab_status.sh
#!/bin/bash
source ./setup_environment.sh
sqlplus / as sysdba <<EOF2
SELECT username, account_status FROM dba_users WHERE username='LAB_ADMIN';
EXIT;
EOF2
EOF
chmod +x setup/verify_lab_status.sh

# ---------------------------
# Automation scripts
# ---------------------------
cat <<'EOF' > automation/run_module.sh
#!/bin/bash
MODULE=$1
if [ -z "$MODULE" ]; then
  echo "Usage: ./run_module.sh <module_folder>"
  exit 1
fi
echo "[INFO] Running module: $MODULE"
cd ../modules/$MODULE
bash module.sh
EOF
chmod +x automation/run_module.sh

cat <<'EOF' > automation/generate_data.py
from faker import Faker
import csv, os
fake = Faker()
os.makedirs("data/generated", exist_ok=True)
with open("data/generated/dummy_data.csv", "w", newline="") as f:
    writer = csv.writer(f)
    writer.writerow(["EMP_NAME", "JOB_TITLE", "SALARY", "DEPT_ID"])
    for _ in range(50):
        writer.writerow([fake.name(), fake.job(), fake.random_int(3000, 15000), fake.random_int(1,3)])
print("[INFO] Dummy data generated in data/generated/dummy_data.csv")
EOF

cat <<'EOF' > automation/simulate_intrusion.py
import cx_Oracle
try:
    conn = cx_Oracle.connect("intruder/intruder123@localhost/FREE")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM lab_admin.employees")
    print(cursor.fetchall())
except cx_Oracle.DatabaseError as e:
    print("[ALERT] Unauthorized access attempt detected!")
    print(e)
finally:
    try:
        conn.close()
    except:
        pass
EOF

cat <<'EOF' > automation/audit_report.py
import cx_Oracle, csv, os
os.makedirs("automation/logs", exist_ok=True)
conn = cx_Oracle.connect("sys/oracle@localhost/FREE", mode=cx_Oracle.SYSDBA)
cursor = conn.cursor()
cursor.execute("SELECT username, action_name, obj_name, timestamp FROM dba_audit_trail ORDER BY timestamp DESC")
with open("automation/logs/audit.log", "w", newline="") as f:
    writer = csv.writer(f)
    writer.writerow(["USERNAME", "ACTION", "OBJECT", "TIMESTAMP"])
    for row in cursor:
        writer.writerow(row)
print("[INFO] Audit log written to automation/logs/audit.log")
EOF

# ---------------------------
# Module 01 placeholders
# ---------------------------
mkdir -p modules/01_users_roles_privileges
cat <<'EOF' > modules/01_users_roles_privileges/module.sh
#!/bin/bash
# Module 01 - Users, Roles & Privileges
echo "[INFO] Executing Module 01: Users, Roles & Privileges"
sqlplus lab_admin/lab123 @create_users.sql
sqlplus lab_admin/lab123 @grant_privileges.sql
sqlplus lab_admin/lab123 @test_access.sql
echo "[INFO] Module 01 completed successfully."
EOF
chmod +x modules/01_users_roles_privileges/module.sh

touch modules/01_users_roles_privileges/{create_users.sql,grant_privileges.sql,test_access.sql,README.md}

# ---------------------------
# Data files
# ---------------------------
cat <<'EOF' > data/employees.csv
EMP_ID,EMP_NAME,JOB_TITLE,SALARY,DEPT_ID
1,John Doe,Developer,4000,1
2,Jane Smith,DBA,6000,2
3,Alex Carter,Analyst,5000,3
EOF

cat <<'EOF' > data/departments.csv
DEPT_ID,DEPT_NAME
1,IT
2,Finance
3,Security
EOF

# ---------------------------
# Completion message
# ---------------------------
echo "[INFO] âœ… Oracle Security Automation Lab contents generated successfully."
echo "[INFO] Next steps:"
echo "  1. Review setup/ and modules/ folders"
echo "  2. Commit and push changes:"
echo "       git add . && git commit -m 'Added initial Oracle Security Lab setup'"
echo "       git push"

